import React                from 'react';
import PropTypes            from 'prop-types';
import AnimatedBackground   from '../AnimatedBackground';
import LinesPlaceholder     from '../LinesPlaceholder';
import styles               from './styles.css';

export default class TablePlaceholder extends React.Component {
  static propTypes = {
    rows: PropTypes.number,
    columns: PropTypes.number,
    rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    rowSpacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    headerHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    columnSpacing: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
  }

  render() {
    const rows = this.props.rows || 5;
    const rowHeight = this.props.rowSpacing || 30;
    const rowSpacing = this.props.rowSpacing || 16;
    const columnSpacing = this.props.columnSpacing || 16;
    const headerHeight = this.props.headerHeight || 50;
    const columns = [...Array(rows)];

    return (
      <div>
        <div className={styles.columns} style={{ marginBottom: rowSpacing }}>
          {columns.map((v,i) => {
            const isLast = columns.length - 1 === i;
            const width = `${100 / parseInt(rows)}%`;

            return(
              <div
                key={i}
                style={{
                  marginRight: (isLast) ? 0 : columnSpacing,
                  width: width
                }}
              >
                <AnimatedBackground height={headerHeight} />
              </div>
            )
          })}
        </div>
        <LinesPlaceholder
          rows={this.props.rows}
          lineHeight={rowHeight}
          lineSpacing={rowSpacing}
        />
      </div>
    );
  }
}
